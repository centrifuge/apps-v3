const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CxJeWJuw.js","assets/chunk-NL6KNZEE-BfjKGAAH.js","assets/root-quzbZdsK.js","assets/index-DNyRCIwI.js","assets/Toaster-DVn7MaYc.js","assets/index-B4wbEYRu.js","assets/useAccount-BmcfKMoq.js","assets/omit-QLD0Eizt.js","assets/field.anatomy-PUQkG3Q7.js","assets/BigInt-DZb4M8gR.js","assets/PoolProvider-CMXDAwhg.js","assets/hooks.module-B-K-_OwG.js","assets/index-COZ3cEWS.js"])))=>i.map(i=>d[i]);
import{c as x,g as v,S as _,C as A,U as y,_ as k}from"./root-quzbZdsK.js";import{i as B}from"./root-quzbZdsK.js";import{n as U}from"./Toaster-DVn7MaYc.js";import"./chunk-NL6KNZEE-BfjKGAAH.js";import"./index-DNyRCIwI.js";import"./useAccount-BmcfKMoq.js";import"./omit-QLD0Eizt.js";import"./field.anatomy-PUQkG3Q7.js";import"./BigInt-DZb4M8gR.js";import"./PoolProvider-CMXDAwhg.js";import"./index-B4wbEYRu.js";D.type="coinbaseWallet";function D(r={}){return r.version==="3"||r.headlessMode?C(r):L(r)}function L(r){let b,f,p,s;return x(d=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:D.type,async connect({chainId:t,...i}={}){try{const n=await this.getProvider(),e=(await n.request({method:"eth_requestAccounts",params:"instantOnboarding"in i&&i.instantOnboarding?[{onboarding:"instant"}]:[]})).map(o=>v(o));f||(f=this.onAccountsChanged.bind(this),n.on("accountsChanged",f)),p||(p=this.onChainChanged.bind(this),n.on("chainChanged",p)),s||(s=this.onDisconnect.bind(this),n.on("disconnect",s));let c=await this.getChainId();if(t&&c!==t){const o=await this.switchChain({chainId:t}).catch(l=>{if(l.code===y.code)throw l;return{id:c}});c=(o==null?void 0:o.id)??c}return{accounts:e,chainId:c}}catch(n){throw/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(n.message)?new y(n):n}},async disconnect(){var i;const t=await this.getProvider();f&&(t.removeListener("accountsChanged",f),f=void 0),p&&(t.removeListener("chainChanged",p),p=void 0),s&&(t.removeListener("disconnect",s),s=void 0),t.disconnect(),(i=t.close)==null||i.call(t)},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(i=>v(i))},async getChainId(){const i=await(await this.getProvider()).request({method:"eth_chainId"});return Number(i)},async getProvider(){if(!b){const t=(()=>{var e;return typeof r.preference=="string"?{options:r.preference}:{...r.preference,options:((e=r.preference)==null?void 0:e.options)??"all"}})(),{createCoinbaseWalletSDK:i}=await k(async()=>{const{createCoinbaseWalletSDK:e}=await import("./index-CxJeWJuw.js");return{createCoinbaseWalletSDK:e}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]));b=i({...r,appChainIds:d.chains.map(e=>e.id),preference:t}).getProvider()}return b},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:t,chainId:i}){var c,o,l,w;const n=d.chains.find(u=>u.id===i);if(!n)throw new _(new A);const e=await this.getProvider();try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:U(n.id)}]}),n}catch(u){if(u.code===4902)try{let a;t!=null&&t.blockExplorerUrls?a=t.blockExplorerUrls:a=(c=n.blockExplorers)!=null&&c.default.url?[(o=n.blockExplorers)==null?void 0:o.default.url]:[];let h;(l=t==null?void 0:t.rpcUrls)!=null&&l.length?h=t.rpcUrls:h=[((w=n.rpcUrls.default)==null?void 0:w.http[0])??""];const g={blockExplorerUrls:a,chainId:U(i),chainName:(t==null?void 0:t.chainName)??n.name,iconUrls:t==null?void 0:t.iconUrls,nativeCurrency:(t==null?void 0:t.nativeCurrency)??n.nativeCurrency,rpcUrls:h};return await e.request({method:"wallet_addEthereumChain",params:[g]}),n}catch(a){throw new y(a)}throw new _(u)}},onAccountsChanged(t){t.length===0?this.onDisconnect():d.emitter.emit("change",{accounts:t.map(i=>v(i))})},onChainChanged(t){const i=Number(t);d.emitter.emit("change",{chainId:i})},async onDisconnect(t){d.emitter.emit("disconnect");const i=await this.getProvider();f&&(i.removeListener("accountsChanged",f),f=void 0),p&&(i.removeListener("chainChanged",p),p=void 0),s&&(i.removeListener("disconnect",s),s=void 0)}}))}function C(r){let f,p,s,d,t;return x(i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:D.type,async connect({chainId:n}={}){try{const e=await this.getProvider(),c=(await e.request({method:"eth_requestAccounts"})).map(l=>v(l));s||(s=this.onAccountsChanged.bind(this),e.on("accountsChanged",s)),d||(d=this.onChainChanged.bind(this),e.on("chainChanged",d)),t||(t=this.onDisconnect.bind(this),e.on("disconnect",t));let o=await this.getChainId();if(n&&o!==n){const l=await this.switchChain({chainId:n}).catch(w=>{if(w.code===y.code)throw w;return{id:o}});o=(l==null?void 0:l.id)??o}return{accounts:c,chainId:o}}catch(e){throw/(user closed modal|accounts received is empty|user denied account)/i.test(e.message)?new y(e):e}},async disconnect(){const n=await this.getProvider();s&&(n.removeListener("accountsChanged",s),s=void 0),d&&(n.removeListener("chainChanged",d),d=void 0),t&&(n.removeListener("disconnect",t),t=void 0),n.disconnect(),n.close()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(e=>v(e))},async getChainId(){const e=await(await this.getProvider()).request({method:"eth_chainId"});return Number(e)},async getProvider(){var n;if(!p){const e=await(async()=>{const{default:u}=await k(async()=>{const{default:a}=await import("./index-COZ3cEWS.js").then(h=>h.i);return{default:a}},__vite__mapDeps([12,1,2,3,4,5,6,7,8,9,10,11]));return typeof u!="function"&&typeof u.default=="function"?u.default:u})();f=new e({...r,reloadOnDisconnect:!1});const c=(n=f.walletExtension)==null?void 0:n.getChainId(),o=i.chains.find(u=>r.chainId?u.id===r.chainId:u.id===c)||i.chains[0],l=r.chainId||(o==null?void 0:o.id),w=r.jsonRpcUrl||(o==null?void 0:o.rpcUrls.default.http[0]);p=f.makeWeb3Provider(w,l)}return p},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:n,chainId:e}){var l,w,u,a;const c=i.chains.find(h=>h.id===e);if(!c)throw new _(new A);const o=await this.getProvider();try{return await o.request({method:"wallet_switchEthereumChain",params:[{chainId:U(c.id)}]}),c}catch(h){if(h.code===4902)try{let g;n!=null&&n.blockExplorerUrls?g=n.blockExplorerUrls:g=(l=c.blockExplorers)!=null&&l.default.url?[(w=c.blockExplorers)==null?void 0:w.default.url]:[];let I;(u=n==null?void 0:n.rpcUrls)!=null&&u.length?I=n.rpcUrls:I=[((a=c.rpcUrls.default)==null?void 0:a.http[0])??""];const q={blockExplorerUrls:g,chainId:U(e),chainName:(n==null?void 0:n.chainName)??c.name,iconUrls:n==null?void 0:n.iconUrls,nativeCurrency:(n==null?void 0:n.nativeCurrency)??c.nativeCurrency,rpcUrls:I};return await o.request({method:"wallet_addEthereumChain",params:[q]}),c}catch(g){throw new y(g)}throw new _(h)}},onAccountsChanged(n){n.length===0?this.onDisconnect():i.emitter.emit("change",{accounts:n.map(e=>v(e))})},onChainChanged(n){const e=Number(n);i.emitter.emit("change",{chainId:e})},async onDisconnect(n){i.emitter.emit("disconnect");const e=await this.getProvider();s&&(e.removeListener("accountsChanged",s),s=void 0),d&&(e.removeListener("chainChanged",d),d=void 0),t&&(e.removeListener("disconnect",t),t=void 0)}}))}export{D as coinbaseWallet,B as injected};

name: Deploy to Demo

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Detect changed apps
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            derwa:
              - 'apps/derwa/**'
              - '.github/workflows/deploy-demo.yml' 
            launchpad:
              - 'apps/launchpad/**'
              - '.github/workflows/deploy-demo.yml'

  build:
    needs: changes
    if: needs.changes.outputs.apps != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changes.outputs.apps) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for Demo
        run: pnpm --filter=${{ matrix.app }} build --mode testnet

      - name: Upload Demo Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: ./apps/${{ matrix.app }}/dist

  deploy-demo:
    needs: [build, changes]
    if: needs.changes.outputs.apps != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changes.outputs.apps) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Demo Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: ./apps/${{ matrix.app }}/dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wrangler
        run: npm install --global wrangler

      - name: Deploy to Cloudflare Demo
        run: |
          cd apps/${{ matrix.app }}
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }} CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }} wrangler deploy --env demo

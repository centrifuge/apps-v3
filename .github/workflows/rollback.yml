name: 'Manual Rollback'

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'The application to roll back'
        required: true
        type: choice
        options:
          - derwa
          - launchpad
      environment:
        description: 'The environment to roll back'
        required: true
        type: choice
        options:
          - staging
          - production
      tag:
        description: 'The stable release tag to roll back to (e.g., v1.2.0)'
        required: true
        type: string

jobs:
  rollback-and-deploy:
    name: 'Roll Back ${{ github.event.inputs.app }} to ${{ github.event.inputs.tag }} on ${{ github.event.inputs.environment }}'
    environment: ${{ github.event.inputs.environment == 'production' && 'production' || null }}
    runs-on: ubuntu-latest

    steps:
      - name: '📥 Checkout code from release tag'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: '🔧 Setup pnpm'
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: '📦 Install Dependencies'
        run: pnpm install --frozen-lockfile

      - name: '🛠️ Build for ${{ github.event.inputs.environment }}'
        run: |
          BUILD_MODE="testnet"
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            BUILD_MODE="mainnet"
          fi
          pnpm --filter=${{ github.event.inputs.app }} build --mode=$BUILD_MODE

      - name: '🔧 Install Wrangler'
        run: npm install --global wrangler

      - name: '🚀 Deploy to Cloudflare ${{ github.event.inputs.environment }}'
        run: |
          cd apps/${{ github.event.inputs.app }}
          CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }} CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }} wrangler deploy --env ${{ github.event.inputs.environment }}
